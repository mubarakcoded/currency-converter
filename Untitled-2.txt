<!DOCTYPE html>
<html lang="en">
	<head>
		<link rel="stylesheet" type="text/css" href="./bootstrap.css"/>
		<meta charset="UTF-8" name="viewport" content="width=device-width, initial-scale=1"/>
	</head>
<body>
  
	<div class="col-md-3"></div>
	<div class="col-md-6 well">
		<h3 class="text-primary">Currency Converter</h3>
		<hr style="border-top:1px dotted #ccc;">
		<div class="col-md-2"></div>
		<div class="col-md-8">
			<div class="form-group">
					<input type="text" class="form-control" id="value1"/> <br> 
				<select onchange="Currency(); Calculate()" class="form-control" id="converter-1" style="width:30%;">
					
				</select>
				<h3 class="text-primary">Convert to</h1>
				<select onchange="Currency(); Calculate()" class="form-control" id="converter-2" style="width:30%;">

					</select>

			</div>
			<br /><br />
			<div class="form-group">
				<label>Converted Value</label>
				<input type="number" class="form-control" id="value2" disabled="disabled"/>
			</div>
		</div>
	</div>
</body>



<!-- Storing currencies in database 
<script>
//	import idb from 'idb';
	const apiURL = `https://free.currencyconverterapi.com/api/v5/countries`;   
let countriesCurrencies;
const dbPromise = idb.open('countries-currencies', 0, upgradeDB => {
  // Note: we don't use 'break' in this switch statement,
  // the fall-through behaviour is what we want.
  switch (upgradeDB.oldVersion) {
    case 0:
      upgradeDB.createObjectStore('objs', {keyPath: 'id'});
  }
});
fetch(apiURL)
  .then(function(response) {
  return response.json();
})
  .then(function(currencies) {
  dbPromise.then(db => {
    if(!db) return;
    countriesCurrencies = [currencies.results];
    const tx = db.transaction('objs', 'readwrite');
    const store = tx.objectStore('objs');
    let i = 0;
    countriesCurrencies.forEach(function(currency) {
      for (let value in currency) {
        store.put(currency[value]);
      }
    });
    return tx.complete;
  });
});
</script>

<!-- Register Service Worker
<script>

	if (!navigator.serviceWorker) return;

navigator.serviceWorker.register('./service-worker.js')
  .then(function(registration) {
    console.log('Service Worker registered:', registration);
  })
  .catch(function(error) {
    console.error('Service Worker could not be registered:', error);
  });
	
</script> -->







<script id="jsbin-javascript">
		function createNode(element) {
			return document.createElement(element);
		}
	  
		function append(parent, el) {
		  return parent.appendChild(el);
		}
	  
		const ul = document.getElementById('authors');
		const url = 'https://free.currencyconverterapi.com/api/v5/currencies';
		fetch(url).then((response) => response.json())
		.then(function(data) {
			let authors = data.results;
			
			console.log(authors.id)

		  return authors.map(function(author) {
			let li = createNode('li'),
				img = createNode('img'),
				span = createNode('span');
			img.src = author.picture.medium;
			span.innerHTML = `${author.name.first} ${author.name.last}`;
			append(li, img);
			append(li, span);
			append(ul, li);

			
		  })
		})
		.catch(function(error) {
		  console.log(JSON.stringify(error));
		});   
	  
	  </script>

<script>
	function Currency(){
		y = document.getElementById("converter").value;
		return y;
	}
	
	function Calculate(){
		y = Currency();
		
		x = document.getElementById("value1").value;
		
		if(x == ""){
			document.getElementById("value2").value = "";
		}else{
			switch(y){
				case "Dollar":
					document.getElementById("value2").value = x * 51.89;
				break;
				
				case "Pound":
					document.getElementById("value2").value = x * 72.39;
				break;
				
				case "Euro":
					document.getElementById("value2").value = x * 63.84;
				break;
				
				case "Yen":
					document.getElementById("value2").value = x * 0.49;
				break;
				
				case "Yuan":
					document.getElementById("value2").value = x * 8.20;
				break;
			}
		}
	}
</script>








<!-- <script>
	fetch("https://free.currencyconverterapi.com/api/v5/currencies")
.then(
  fetchResult => {
    return fetchResult.text();
  },
  fetchError => {
    console.log("Unable to fetch", fetchError);
  },
)
.then(
  textResult => {
    console.log(`this is the result : ${textResult}`);
  },
  parseError => {
    console.log("Une erreur a eu lieu pendant le parsing", parseError);
  },
);
</script> -->
</html>